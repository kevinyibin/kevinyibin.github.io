<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Python练习】10多线程</title>
      <link href="/2021/08/09/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9110%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2021/08/09/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9110%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-多线程文件名称查找"><a href="#练习一-多线程文件名称查找" class="headerlink" title="练习一 多线程文件名称查找"></a>练习一 多线程文件名称查找</h2><ol><li>对某一文件夹启动10个线程查找文件包含abc三个字符的文件名，并显示该文件所在的路径</li><li>尽量使用面向对象编程方式实现</li></ol><h2 id="练习二-扩展练习：使用多线程编写一个简单的聊天室"><a href="#练习二-扩展练习：使用多线程编写一个简单的聊天室" class="headerlink" title="练习二 扩展练习：使用多线程编写一个简单的聊天室"></a>练习二 扩展练习：使用多线程编写一个简单的聊天室</h2><ol><li>接收用户的网络连接可以使用socketserver库</li><li>用户首次登陆输入自己的名字和当前在线的用户，支持多人同时登陆</li><li>用户默认发的消息全部人可以收到，用户使用@某一用户可以进行私聊</li></ol><p>提示： 服务端执行后会监听指定的端口， 客户端可以通过 nc &lt;服务器ip地址&gt;  &lt;服务器端口&gt; 方式连接， 如：<br>服务端执行 python server.py 后进行监听8000端口， 客户端执行 nc -v 127.0.0.1 8000 后可以连接到服务端<br>客户端A 发送消息给全体人员可以直接输入消息内容， 回车后，其他客户端可见，  客户端A发给客户端B私信可以使用<br>@客户端B的名字  聊天内容，只有客户端B能够看到聊天内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">srvip = (<span class="string">&#x27;&#x27;</span>, <span class="number">8000</span>)</span><br><span class="line"></span><br><span class="line">userg = &#123;&#125;</span><br><span class="line"></span><br><span class="line">timefmt = <span class="string">&quot;%H:%M:%S&quot;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;^@&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">override socketserver.TcpServer.__init__()</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span>(<span class="params">socketserver.TCPServer</span>):</span></span><br><span class="line">    socket_lev = socket.SOL_SOCKET</span><br><span class="line">    socket_opt = socket.SO_REUSEADDR</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">            self,</span></span></span><br><span class="line"><span class="params"><span class="function">            server_address,</span></span></span><br><span class="line"><span class="params"><span class="function">            RequestHandlerClass,</span></span></span><br><span class="line"><span class="params"><span class="function">            bind_and_activate=<span class="literal">True</span></span>):</span></span><br><span class="line">        socketserver.BaseServer.__init__(</span><br><span class="line">            self, server_address, RequestHandlerClass)</span><br><span class="line">        self.socket = socket.socket(self.address_family,</span><br><span class="line">                                    self.socket_type)</span><br><span class="line">        self.socket.setsockopt(self.socket_lev, self.socket_opt, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> bind_and_activate:</span><br><span class="line">            self.server_bind()</span><br><span class="line">            self.server_activate()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThreadingTCPServer</span>(<span class="params">socketserver.ThreadingMixIn, MyTCPServer</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTcpHandler</span>(<span class="params">socketserver.StreamRequestHandler</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendtimes</span>(<span class="params">self</span>):</span></span><br><span class="line">        msgsendtime = time.strftime(timefmt, time.localtime())</span><br><span class="line">        <span class="keyword">return</span> msgsendtime</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">whoonline</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.usernames = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> userg.keys():</span><br><span class="line">            self.usernames = self.usernames + key.strip(<span class="string">&#x27;\n&#x27;</span>) + <span class="string">&quot; &quot;</span></span><br><span class="line">        self.sendmsg = <span class="string">&quot;online: %s\n&quot;</span> % self.usernames</span><br><span class="line">        self.name = name</span><br><span class="line">        userg[self.name].send(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">newuserlogin</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.sendtime = self.sendtimes()</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sendmsg = <span class="string">&quot;[ %s %s login]\n&quot;</span> % (</span><br><span class="line">            self.sendtime, self.name.strip(<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> userg.keys():</span><br><span class="line">            <span class="keyword">if</span> key == self.name:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                userg[key].send(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">userlogout</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.sendtime = self.sendtimes()</span><br><span class="line">        self.name = name.strip(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        self.sendmsg = <span class="string">&quot;[%s %s logout]\n&quot;</span> % (self.sendtime, self.name)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> userg.keys():</span><br><span class="line">            userg[key].send(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendmsgs</span>(<span class="params">self, msg, name</span>):</span></span><br><span class="line">        self.sendtime = self.sendtimes()</span><br><span class="line">        self.sendmsg = <span class="string">&quot;&lt;public&gt;[%s %s]: %s&quot;</span> % (</span><br><span class="line">            name.strip(<span class="string">&#x27;\n&#x27;</span>), self.sendtime, msg)</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> userg.keys():</span><br><span class="line">            <span class="keyword">if</span> key == self.name:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                userg[key].send(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendmsgtoone</span>(<span class="params">self, msg, name</span>):</span></span><br><span class="line">        self.sendtime = self.sendtimes()</span><br><span class="line">        self.toname = msg.split()[<span class="number">0</span>][<span class="number">1</span>:]</span><br><span class="line">        msglen = <span class="built_in">len</span>(msg.split()[<span class="number">0</span>]) + <span class="number">1</span></span><br><span class="line">        self.tomsg = msg[msglen:]</span><br><span class="line">        self.keyname = self.toname + <span class="string">&quot;\n&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.keyname <span class="keyword">not</span> <span class="keyword">in</span> userg:</span><br><span class="line">            self.sendmsg = <span class="string">&quot;ERROE [%s] user not online or not exist\n&quot;</span> % self.toname</span><br><span class="line">            userg[name].send(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.sendmsg = <span class="string">&quot;&lt;priv msg&gt;[%s %s]: %s&quot;</span> % (</span><br><span class="line">                self.name.strip(<span class="string">&#x27;\n&#x27;</span>), self.sendtime, self.tomsg)</span><br><span class="line">            userg[self.keyname].send(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.usernames = <span class="string">&quot;&quot;</span></span><br><span class="line">        self.cur_thread = threading.current_thread()</span><br><span class="line">        <span class="comment">#        print &quot;%s Staring...&quot; % self.cur_thread.name</span></span><br><span class="line">        <span class="comment">#        print threading.active_count()</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span> * <span class="number">10</span>, <span class="string">&#x27;Get new connection&#x27;</span>, <span class="string">&#x27;-&#x27;</span> * <span class="number">10</span>)</span><br><span class="line">        <span class="comment">#        print self.request</span></span><br><span class="line">        self.sendmsg = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                ======================================</span></span><br><span class="line"><span class="string">                |        Welcome to My Server        |</span></span><br><span class="line"><span class="string">                |       Please Enter You Name:       |</span></span><br><span class="line"><span class="string">                |                                    |</span></span><br><span class="line"><span class="string">                ======================================\n&quot;&quot;&quot;</span></span><br><span class="line">        self.wfile.write(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">        self.name = self.rfile.readline().decode()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.name.strip(<span class="string">&#x27;\n&#x27;</span>).strip():</span><br><span class="line">            self.wfile.write(<span class="string">&#x27;Please Enter You Name\n&#x27;</span>)</span><br><span class="line">            self.name = self.rfile.readline().decode()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> self.name <span class="keyword">not</span> <span class="keyword">in</span> userg:</span><br><span class="line">                userg[self.name] = self.request</span><br><span class="line">                self.sendmsg = <span class="string">&quot;Hello %s&quot;</span> % self.name</span><br><span class="line">                self.wfile.write(self.sendmsg.encode(encoding=<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">                self.newuserlogin(self.name)</span><br><span class="line">                self.whoonline(self.name)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.wfile.write(<span class="string">&#x27;Please Enter A New Name:\n&#x27;</span>)</span><br><span class="line">                self.name = self.rfile.readline().decode()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            self.resvmsg = self.rfile.readline().decode()</span><br><span class="line">            <span class="comment">#            print &quot;*&quot; * 30</span></span><br><span class="line">            <span class="comment">#            print self.resvmsg</span></span><br><span class="line">            <span class="keyword">if</span> self.resvmsg.strip(</span><br><span class="line">                    <span class="string">&#x27;\n&#x27;</span>) <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> self.resvmsg.strip(<span class="string">&#x27;\n&#x27;</span>) == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> self.resvmsg.strip(<span class="string">&#x27;\n&#x27;</span>) == <span class="string">&quot;quit&quot;</span>:</span><br><span class="line">                <span class="keyword">del</span> (userg[self.name])</span><br><span class="line">                self.userlogout(self.name)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> reg.search(self.resvmsg):</span><br><span class="line">                self.sendmsgtoone(self.resvmsg, self.name)</span><br><span class="line">            <span class="keyword">elif</span> self.resvmsg.strip(<span class="string">&#x27;\n&#x27;</span>) == <span class="string">&quot;w&quot;</span> <span class="keyword">or</span> self.resvmsg.strip(<span class="string">&#x27;\n&#x27;</span>) == <span class="string">&quot;W&quot;</span>:</span><br><span class="line">                self.whoonline(self.name)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.sendmsgs(self.resvmsg, self.name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">finish</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.wfile.closed:</span><br><span class="line">            self.wfile.flush()</span><br><span class="line">        self.wfile.close()</span><br><span class="line">        self.rfile.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server = MyThreadingTCPServer(srvip, MyTcpHandler)</span><br><span class="line">server.serve_forever()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】09装饰器</title>
      <link href="/2021/08/08/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9109%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
      <url>/2021/08/08/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9109%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-定义装饰器，用于打印函数执行的时间"><a href="#练习一-定义装饰器，用于打印函数执行的时间" class="headerlink" title="练习一 定义装饰器，用于打印函数执行的时间"></a>练习一 定义装饰器，用于打印函数执行的时间</h2><ol><li>统计函数开始执行和结束执行的时间</li><li>扩展练习：为装饰器传入超时时间，函数执行超过指定时间后退出<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为装饰器传入超时时间，函数执行超过指定时间后退出</span></span><br><span class="line"><span class="comment"># windows下signal.SIGALRM不可用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">timeout</span>(<span class="params">seconds=<span class="number">10</span>, error_message=<span class="string">&quot;Timer expired&quot;</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">handler</span>(<span class="params">singnum, frame</span>):</span></span><br><span class="line">            <span class="keyword">raise</span> TimeoutError(error_message)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            signal.signal(signal.SIGALRM, handler)</span><br><span class="line">            signal.alarm(seconds)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                result = func(*args, **kwargs)</span><br><span class="line">            <span class="keyword">finally</span>:</span><br><span class="line">                signal.alarm(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> decorator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@timeout(<span class="params"><span class="number">5</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getinfo</span>(<span class="params">msg</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;getinfo start!&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;msg: %s&quot;</span> % msg)</span><br><span class="line">    time.sleep(<span class="number">10</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;getinfo end!&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        getinfo(<span class="string">&#x27;Test!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> TimeoutError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;time out: %s&quot;</span> % e)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="练习二-定义装饰器，实现不同颜色显示执行结果的功能"><a href="#练习二-定义装饰器，实现不同颜色显示执行结果的功能" class="headerlink" title="练习二 定义装饰器，实现不同颜色显示执行结果的功能"></a>练习二 定义装饰器，实现不同颜色显示执行结果的功能</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 向装饰器传递参数，通过传递的参数获取到输出的颜色</span></span><br><span class="line"><span class="comment"># 2. 被装饰函数的print( )输出根据装饰器得到的颜色进行输出</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_color</span>(<span class="params">code</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">color_func</span>(<span class="params">s</span>):</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> sys.stdout.isatty():</span><br><span class="line">                <span class="keyword">return</span> func(s)</span><br><span class="line">            tpl = <span class="string">&#x27;\x1b[&#123;&#125;m&#123;&#125;\x1b[0m&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> tpl.<span class="built_in">format</span>(code, func(s))</span><br><span class="line">        <span class="keyword">return</span> color_func</span><br><span class="line">    <span class="keyword">return</span> decorator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@make_color(<span class="params"><span class="number">33</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fmta</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;:^7&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(<span class="built_in">float</span>(s) * <span class="number">1000</span>)[:<span class="number">5</span>] + <span class="string">&#x27;ms&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】08模块</title>
      <link href="/2021/08/06/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9108%E6%A8%A1%E5%9D%97/"/>
      <url>/2021/08/06/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9108%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-模块"><a href="#练习一-模块" class="headerlink" title="练习一 模块"></a>练习一 模块</h2><ol><li>导入os模块，并使用help(os)查看os模块的帮助文档</li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】07函数</title>
      <link href="/2021/08/03/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9107%E5%87%BD%E6%95%B0/"/>
      <url>/2021/08/03/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9107%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-函数"><a href="#练习一-函数" class="headerlink" title="练习一 函数"></a>练习一 函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建一个函数，用于接收用户输入的数字，并计算用户输入数字的和</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span>():</span></span><br><span class="line">    two_num = <span class="built_in">input</span>(<span class="string">&#x27;请输入两个数字，用空格做分隔：&#x27;</span>)</span><br><span class="line">    <span class="comment"># 检查用户输入是否合法</span></span><br><span class="line">    func2(two_num)</span><br><span class="line">    num1, *_, num2 = <span class="built_in">list</span>(two_num)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">int</span>(num1) + <span class="built_in">int</span>(num2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span>(<span class="params">check_number</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func1()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 创建一个函数，传入n个整数，返回其中最大的数和最小的数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func3</span>(<span class="params">*nums</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">max</span>(<span class="built_in">list</span>(nums)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">min</span>(<span class="built_in">list</span>(nums)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func3(<span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">32</span>, <span class="number">654</span>, <span class="number">765</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 创建一个函数，传入一个参数n，返回n的阶乘</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span>(<span class="params">num3</span>):</span></span><br><span class="line">    <span class="keyword">if</span> num3 == <span class="number">0</span> <span class="keyword">or</span> num3 == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (num3 * fact(num3 - <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(fact(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用高阶函数</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">num4 = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(reduce(<span class="keyword">lambda</span> x, y: x * y, <span class="built_in">range</span>(<span class="number">1</span>, num4 + <span class="number">1</span>)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】06错误和异常</title>
      <link href="/2021/08/01/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9106%E9%94%99%E8%AF%AF%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
      <url>/2021/08/01/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9106%E9%94%99%E8%AF%AF%E5%92%8C%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-异常"><a href="#练习一-异常" class="headerlink" title="练习一 异常"></a>练习一 异常</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 在Python程序中，分别使用未定义变量、访问列表不存在的索引、访问字典不存在的关键字观察系统提示的错误信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用未定义变量</span></span><br><span class="line">a + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问列表不存在的索引</span></span><br><span class="line">b = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">b[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问字典不存在的key</span></span><br><span class="line">c = &#123;<span class="string">&#x27;x&#x27;</span>: <span class="number">1</span>&#125;</span><br><span class="line">c[<span class="string">&#x27;y&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 通过Python程序产生IndexError，并用try捕获异常处理</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    b = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">    b[<span class="number">3</span>]</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;访问列表不存在的索引&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】05文件输入和输出</title>
      <link href="/2021/07/29/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9105%E6%96%87%E4%BB%B6%E8%BE%93%E5%85%A5%E5%92%8C%E8%BE%93%E5%87%BA/"/>
      <url>/2021/07/29/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9105%E6%96%87%E4%BB%B6%E8%BE%93%E5%85%A5%E5%92%8C%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-文件的创建和使用"><a href="#练习一-文件的创建和使用" class="headerlink" title="练习一 文件的创建和使用"></a>练习一 文件的创建和使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建一个文件，并写入当前日期</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">now = datetime.datetime.now()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;c.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 注意write( )方法写入的内容是字符串类型</span></span><br><span class="line">    f.write(<span class="built_in">str</span>(now))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 再次打开这个文件，读取文件的前4个字符后退出</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;c.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    text_4 = f.read(<span class="number">4</span>)</span><br><span class="line">    <span class="built_in">print</span>(text_4)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】04映射和集合</title>
      <link href="/2021/07/28/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9104%E6%98%A0%E5%B0%84%E5%92%8C%E9%9B%86%E5%90%88/"/>
      <url>/2021/07/28/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9104%E6%98%A0%E5%B0%84%E5%92%8C%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-字典的使用"><a href="#练习一-字典的使用" class="headerlink" title="练习一 字典的使用"></a>练习一 字典的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 定义一个字典，分别使用a、b、c、d作为字典的关键字，值为任意内容</span></span><br><span class="line">dict1 = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;aa&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;xyz&#x27;</span>, <span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;Helo&#x27;</span>, <span class="string">&#x27;d&#x27;</span>: <span class="number">123</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 为该字典增加一个元素‘c&#x27;:&#x27;cake&#x27;后，将字典输出到屏幕</span></span><br><span class="line"><span class="comment"># 字典的key不能重复，否则会覆盖掉相同key的值</span></span><br><span class="line">dict1[<span class="string">&#x27;c&#x27;</span>] = <span class="string">&#x27;cake&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(dict1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 取出字典中关键字为d的值</span></span><br><span class="line"><span class="built_in">print</span>(dict1[<span class="string">&#x27;d&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="练习二-集合的使用"><a href="#练习二-集合的使用" class="headerlink" title="练习二 集合的使用"></a>练习二 集合的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 将字符串hello中每个字符赋值给一个集合，将这个集合输出到屏幕</span></span><br><span class="line">str1 = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="comment"># 集合里的元素不能重复</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">set</span>(str1))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】03条件和循环</title>
      <link href="/2021/07/27/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9103%E6%9D%A1%E4%BB%B6%E5%92%8C%E5%BE%AA%E7%8E%AF/"/>
      <url>/2021/07/27/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9103%E6%9D%A1%E4%BB%B6%E5%92%8C%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-条件语句的使用"><a href="#练习一-条件语句的使用" class="headerlink" title="练习一 条件语句的使用"></a>练习一 条件语句的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 使用if语句判断字符串的长度是否等于10，根据判断结果进行不同的输出</span></span><br><span class="line">string1 = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"><span class="comment"># 使用len( )可以计算字符串的长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(string1))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断相等可以使用“==”， 不相等可以使用 not 关键字</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(string1) == <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;字符串长度不为10&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;字符串长度为10&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 提示用户输入一个1-40之间的数字，使用if语句根据输入数字的大小进行判断，如果输入的数字在</span></span><br><span class="line"><span class="comment"># 1-10，11-20，21-30，31-40，分别进行不同的输出</span></span><br><span class="line">num_user_input = <span class="built_in">input</span>(<span class="string">&#x27;输入一个1-40之间的整数：&#x27;</span>)</span><br><span class="line">num_to_int = <span class="built_in">int</span>(num_user_input)</span><br><span class="line"><span class="keyword">if</span> <span class="number">1</span> &lt;= num_to_int &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;数字在1-10之间&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">11</span> &lt;= num_to_int &lt;= <span class="number">20</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;数字在11-20之间&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">21</span> &lt;= num_to_int &lt;= <span class="number">30</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;数字在21-30之间&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;数字在31-40之间&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="练习二-循环语句的使用"><a href="#练习二-循环语句的使用" class="headerlink" title="练习二 循环语句的使用"></a>练习二 循环语句的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 使用for语句输出1-100之间的所有偶数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 使用while语句输出1-100之间能够被3整除的数字</span></span><br><span class="line">j = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> j &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> j % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(j)</span><br><span class="line">    j += <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】02序列</title>
      <link href="/2021/07/25/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9102%E5%BA%8F%E5%88%97/"/>
      <url>/2021/07/25/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9102%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-字符串"><a href="#练习一-字符串" class="headerlink" title="练习一 字符串"></a>练习一 字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 定义一个字符串Hello Python 并使用print( )输出</span></span><br><span class="line">string1 = <span class="string">&#x27;Hello Python&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(string1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 定义第二个字符串Let‘s go并使用print( )输出</span></span><br><span class="line"><span class="comment"># 字符串内容包括单引号可以使用双引号将字符串括起来</span></span><br><span class="line">string2 = <span class="string">&quot;Let&#x27;s go&quot;</span></span><br><span class="line"><span class="built_in">print</span>(string2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 定义第三个字符串&quot;The Zen of Python&quot; -- by Tim Peters 并使用print( )输出</span></span><br><span class="line">string3 = <span class="string">&#x27;&quot;The Zen of Python&quot; -- by Tim Peters&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(string3)</span><br></pre></td></tr></table></figure><h2 id="练习二-字符串基本操作"><a href="#练习二-字符串基本操作" class="headerlink" title="练习二 字符串基本操作"></a>练习二 字符串基本操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 定义两个字符串分别为 xyz 、abc</span></span><br><span class="line">string1 = <span class="string">&#x27;xyz&#x27;</span></span><br><span class="line">string2 = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 对两个字符串进行连接</span></span><br><span class="line"><span class="comment"># 字符串属于序列，序列连接操作符为“+”</span></span><br><span class="line"><span class="built_in">print</span>(string1 + string2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 取出xyz字符串的第二个和第三个元素</span></span><br><span class="line"><span class="comment"># 序列的切片操作使用“[ ]”</span></span><br><span class="line"><span class="built_in">print</span>(string1[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(string1[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 对abc输出10次</span></span><br><span class="line"><span class="comment"># 序列的重复操作</span></span><br><span class="line"><span class="built_in">print</span>(string2 * <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 判断a字符（串）在 xyz 和 abc 两个字符串中是否存在，并进行输出</span></span><br><span class="line"><span class="comment"># 判断字符是否存在于序列当中， 返回布尔值类型，如果存在返回True，不存在返回False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> string1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> string2)</span><br></pre></td></tr></table></figure><h2 id="练习三-列表的基本操作"><a href="#练习三-列表的基本操作" class="headerlink" title="练习三 列表的基本操作"></a>练习三 列表的基本操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 定义一个含有5个数字的列表</span></span><br><span class="line">list1 = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"><span class="comment"># 使用type( )可以查看变量的类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(list1))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 为列表增加一个元素 100</span></span><br><span class="line"><span class="comment"># 列表自带的方法很丰富，参考官方文档</span></span><br><span class="line"><span class="comment"># https://docs.python.org/3.5/library/stdtypes.html#sequence-types-list-tuple-range</span></span><br><span class="line">list1.append(<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 使用remove()删除一个元素后观察列表的变化</span></span><br><span class="line">list1.remove(<span class="number">7</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 使用切片操作分别取出列表的前三个元素，取出列表的最后一个元素</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line"><span class="comment"># 注意取出最后一个元素的类型为整型</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="练习四-元组的基本操作"><a href="#练习四-元组的基本操作" class="headerlink" title="练习四 元组的基本操作"></a>练习四 元组的基本操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 定义一个任意元组，对元组使用append() 查看错误信息</span></span><br><span class="line">tuple1 = (<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment"># 元组定义完成一般不可变，也没有append方法，会报错</span></span><br><span class="line"><span class="comment"># AttributeError: &#x27;tuple&#x27; object has no attribute &#x27;append&#x27;</span></span><br><span class="line"><span class="comment"># tuple1.append()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 访问元组中的倒数第二个元素</span></span><br><span class="line"><span class="comment"># 元组也是序列，因此可以使用序列操作</span></span><br><span class="line"><span class="built_in">print</span>(tuple1[-<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 定义一个新的元组，和 1. 的元组连接成一个新的元组</span></span><br><span class="line">tuple2 = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(tuple1 + tuple2)</span><br><span class="line"><span class="comment"># 组成新的元组之后会新申请一块内存存放元组，操作的两个元组不变</span></span><br><span class="line"><span class="built_in">print</span>(tuple1)</span><br><span class="line"><span class="built_in">print</span>(tuple2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 计算元组元素个数</span></span><br><span class="line"><span class="comment"># 可以使用len( )方法计算，也可以使用自带的__len__( )方法得到元组元素的个数，</span></span><br><span class="line"><span class="comment"># 元组元素的个数和总长度是一样的</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(tuple1))</span><br><span class="line"><span class="built_in">print</span>(tuple1.__len__())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python练习】01变量</title>
      <link href="/2021/07/20/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9101%E5%8F%98%E9%87%8F/"/>
      <url>/2021/07/20/%E3%80%90Python%E7%BB%83%E4%B9%A0%E3%80%9101%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="练习一-变量的定义和使用"><a href="#练习一-变量的定义和使用" class="headerlink" title="练习一 变量的定义和使用"></a>练习一 变量的定义和使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义美元</span></span><br><span class="line">dollar = <span class="number">100</span></span><br><span class="line"><span class="comment"># 定义汇率</span></span><br><span class="line">exchange = <span class="number">6.4696</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;dol&#125;美元兑换的人民币数量为&#123;yuan&#125;&#x27;</span>.<span class="built_in">format</span>(dol=dollar, yuan=dollar * exchange))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HexoEditor</title>
      <link href="/2021/07/06/HexoEditor/"/>
      <url>/2021/07/06/HexoEditor/</url>
      
        <content type="html"><![CDATA[<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>HexoEditor <ul><li>Hexo Post Preview same as in Browser</li><li>Hexo Tag/Filter/Renderer support</li><li>Use Hexo <code>_config.yml</code> support</li><li>Quick New Post in hexo source </li><li>Quick Modify File Name (In Hexo Post Edit)  </li><li>Quick Deploy Post</li><li>Quick Hexo Command <code>hexo d</code>,<code>hexo g</code>,<code>hexo s</code>,<code>hexo clean</code></li><li>Auto Change Image to Markdown <ul><li>Support Drag Image</li><li>Support Paste Clipboard Image</li></ul></li><li>Support Image Cloud (One Step Upload)<ul><li>Support <a href="https://sm.ms/">SM.MS</a> </li><li>Support <a href="https://portal.qiniu.com/">QiNiu</a> </li><li>Support <a href="https://console.cloud.tencent.com/">Tencent</a> </li></ul></li><li>Quick Start (Common Directory, Common URL)</li><li>Scorll Together/None</li></ul></li><li>HexoEditor (Inherit <a href="https://github.com/Moeditor/Moeditor">Moeditor</a>)<ul><li>GitHub Flavored Markdown</li><li>TeX math expressions</li><li>UML diagrams</li><li>Code highlight in editor</li><li>Read/Write/Preview mode</li><li>Custom font / line height / font size</li><li>Custom themes</li><li>Code highlight themes (powered by <a href="https://highlightjs.org/">highlight.js</a>)</li><li>Auto reload</li><li>Localization</li><li>Focus mode</li></ul></li></ul><h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/main.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor Main"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/side-menu.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor side"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/menu.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor menu"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/about.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor About"></p><h2 id="Gif-Screenshots"><a href="#Gif-Screenshots" class="headerlink" title="Gif Screenshots"></a>Gif Screenshots</h2><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/gif-settings.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor settings"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/gif-tag.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor tag"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/gif-mode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor Mode"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/gif-uploadImage.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor Upload Image"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/gif-newpost.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor New Post"></p><p><img "" class="lazyload placeholder" data-original="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/gif-hexo.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="HexoEditor Hexo"></p><h2 id="Plan-To-Do"><a href="#Plan-To-Do" class="headerlink" title="Plan To Do"></a>Plan To Do</h2><ul><li><input disabled="" type="checkbox"> Add Toc</li><li><input checked="" disabled="" type="checkbox"> Add Hexo Title Header setting (100%)</li><li><input checked="" disabled="" type="checkbox"> Add Editor ShortCut</li><li><input disabled="" type="checkbox"> Add history files tree<br>…..</li><li><input checked="" disabled="" type="checkbox"> Deploy Post</li><li><input disabled="" type="checkbox"> Add multi-editing in tabs</li></ul><h2 id="ShortCut"><a href="#ShortCut" class="headerlink" title="ShortCut"></a>ShortCut</h2><table><thead><tr><th align="center">Key</th><th align="left">Method</th><th align="left">explanation</th></tr></thead><tbody><tr><td align="center"><code>Tab</code></td><td align="left">tabAdd</td><td align="left">add indentation</td></tr><tr><td align="center"><code>Shift</code> - <code>Tab</code></td><td align="left">tabSubtract</td><td align="left">reduce indentation</td></tr><tr><td align="center"><code>Ctrl</code> - <code>B</code></td><td align="left">toggleBlod</td><td align="left">toggle blod</td></tr><tr><td align="center"><code>Ctrl</code> - <code>I</code></td><td align="left">toggleItalic</td><td align="left">toggle italic</td></tr><tr><td align="center"><code>Ctrl</code> - <code>D</code></td><td align="left">toggleDelete</td><td align="left">delete current line</td></tr><tr><td align="center"><code>Ctrl</code> - <code>`</code></td><td align="left">toggleComment</td><td align="left">toggle comment</td></tr><tr><td align="center"><code>Ctrl</code> - <code>L</code></td><td align="left">toggleUnOrderedList</td><td align="left">toggle unordered list</td></tr><tr><td align="center"><code>Ctrl</code> - <code>Alt</code> - <code>L</code></td><td align="left">toggleOrderedList</td><td align="left">toggle ordered list</td></tr><tr><td align="center"><code>Ctrl</code> - <code>]</code></td><td align="left">toggleHeader</td><td align="left">downgrade title</td></tr><tr><td align="center"><code>Ctrl</code> - <code>[</code></td><td align="left">toggleUnHeader</td><td align="left">upgrade title</td></tr><tr><td align="center"><code>Ctrl</code> - <code>=</code></td><td align="left">toggleBlockquote</td><td align="left">add blockquote</td></tr><tr><td align="center"><code>Ctrl</code> - <code>-</code></td><td align="left">toggleUnBlockquote</td><td align="left">reduce blockquote</td></tr><tr><td align="center"><code>Ctrl</code> - <code>U</code></td><td align="left">drawLink</td><td align="left">add hyperlink</td></tr><tr><td align="center"><code>Ctrl</code> - <code>Alt</code> - <code>U</code></td><td align="left">drawImageLink</td><td align="left">add image</td></tr><tr><td align="center"><code>Ctrl</code> - <code>T</code></td><td align="left">drawTable(row col)</td><td align="left">add table(row column)</td></tr><tr><td align="center"><code>Ctrl</code> - <code>V</code></td><td align="left">pasteOriginContent</td><td align="left">paste origin content</td></tr><tr><td align="center"><code>Shift</code> - <code>Ctrl</code> - <code>V</code></td><td align="left">pasteContent</td><td align="left">auto paste content</td></tr><tr><td align="center"><code>Alt</code> - <code>F</code></td><td align="left">formatTables</td><td align="left">format tables</td></tr><tr><td align="center"><code>Ctrl</code> - <code>N</code></td><td align="left"></td><td align="left">new md document</td></tr><tr><td align="center"><code>Ctrl</code> - <code>H</code></td><td align="left"></td><td align="left">new hexo document</td></tr><tr><td align="center"><code>Ctrl</code> - <code>O</code></td><td align="left"></td><td align="left">open md document</td></tr><tr><td align="center"><code>Ctrl</code> - <code>S</code></td><td align="left"></td><td align="left">save md document</td></tr><tr><td align="center"><code>Shift</code> - <code>Ctrl</code> - <code>S</code></td><td align="left"></td><td align="left">save as</td></tr><tr><td align="center"><code>Alt</code> - <code>Ctrl</code> - <code>S</code></td><td align="left"></td><td align="left">open settings</td></tr><tr><td align="center"><code>Ctrl</code> - <code>W</code></td><td align="left"></td><td align="left">toggle write mode</td></tr><tr><td align="center"><code>Ctrl</code> - <code>P</code></td><td align="left"></td><td align="left">toggle preview mode</td></tr><tr><td align="center"><code>Ctrl</code> - <code>R</code></td><td align="left"></td><td align="left">toggle read mode</td></tr></tbody></table><ul><li><strong>tip</strong>: In mac OS, plase replace <code>Ctrl</code> key with <code>Cmd</code> key.</li></ul><h2 id="Building"><a href="#Building" class="headerlink" title="Building"></a>Building</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//if use Windows:</span></span><br><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;C:/Program Files/nodejs/npm_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;C:/Program Files/nodejs/npm_cache&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//if use Linux\Mac:</span></span><br><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;~/nodejs/npm_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;~/nodejs/npm_cache&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//If In China, China, China, you can set mirror to speed up !</span></span><br><span class="line">npm config <span class="built_in">set</span> registry <span class="string">&quot;https://registry.npm.taobao.org/&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> electron_mirror <span class="string">&quot;https://npm.taobao.org/mirrors/electron/&quot;</span></span><br><span class="line"></span><br><span class="line">git clone https:<span class="comment">//github.com/zhuzhuyule/HexoEditor.git</span></span><br><span class="line">cd HexoEditor</span><br><span class="line">npm install</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><p>This is <a href="https://github.com/zhuzhuyule/HexoEditor/blob/master/doc/en/Building.md">Detail Method</a></p><h2 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h2><p>There’s three ways to open the <a href="https://developer.chrome.com/devtools">Chromium Developer Tools</a>.</p><ol><li>Add <code>--debug</code> to the command line args:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start -- --debug</span><br></pre></td></tr></table></figure><ol start="2"><li><code>Ctrl</code> + <code>Shift</code> + <code>I</code> in Linux / Windows or <code>Command</code> + <code>Option</code> + <code>I</code> in OS X / macOS to toggle devtools for a window.</li><li>Set <code>debug</code> to <code>true</code> in the config. The config file is stored in <code>~/.config/configstore/HexoEditor.json</code> (for every system).</li></ol><h2 id="Localization"><a href="#Localization" class="headerlink" title="Localization"></a>Localization</h2><p>HexoEditor will auto detect your system language and use the localization.</p><p>You can set language manually in the Settings window.</p><p>Now the app supports English, Chinese, French, German, Spanish and <em>incomplete</em> Portuguese.</p><p><strong>Help us</strong> if you can translate this app. Please follow the guide in <code>app/moe-l10n.js</code>.</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>HexoEditor itself is licensed under the <strong>GPL v3</strong> license.</p><p>Some node modules are licensed under other free software license.</p><p>The <code>Raleway</code> font is licensed under the OFL open font license.</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>modify codemirror file :</li></ol><blockquote><p>./node_modules/codemirror/lib/codemirror.js (line: <code>3104</code>)</p></blockquote><blockquote><p>./node_modules/codemirror/src/display/selection.js (line: <code>56</code>)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var rightSide = Math.max(display.sizerWidth, displayWidth(cm) - display.sizer.offsetLeft) - padding.right;</span></span><br><span class="line"><span class="keyword">var</span> rightSide = display.lineDiv.offsetWidth - padding.right;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
